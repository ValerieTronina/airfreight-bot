import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters, ConversationHandler

CITY, AIRPORT, WEIGHT, LENGTH, WIDTH, HEIGHT = range(6)
logging.basicConfig(level=logging.INFO)
user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤–∏–∞–ø–µ—Ä–µ–≤–æ–∑–∫–∏ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–§.\n\n–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏:")
    return CITY

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚úàÔ∏è –≠—Ç–æ—Ç –±–æ—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤–∏–∞–¥–æ—Å—Ç–∞–≤–∫–∏ –≥—Ä—É–∑–∞ –∏–∑ –ö–∏—Ç–∞—è –≤ –†–æ—Å—Å–∏—é.\n"
        "–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å, –≥–∞–±–∞—Ä–∏—Ç—ã –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç ‚Äî —è –≤—Å—ë –ø–æ—Å—á–∏—Ç–∞—é.\n"
        "–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /reset"
    )

async def info_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üì¶ –í —Ä–∞—Å—á—ë—Ç–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è:\n"
        "- –†–µ–∞–ª—å–Ω—ã–π –∏ –æ–±—ä—ë–º–Ω—ã–π –≤–µ—Å\n"
        "- –¢–∞—Ä–∏—Ñ –ø–æ –≤–µ—Å–æ–≤–æ–º—É –¥–∏–∞–ø–∞–∑–æ–Ω—É\n"
        "- –ê–≤–∏–∞–ª–∏–Ω–∏–∏\n"
        "- –õ–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã\n"
        "- –¢–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
    )

async def contacts_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üì≤ –°–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–º:\n"
        "‚Ä¢ WhatsApp: https://wa.me/79295770582\n"
        "‚Ä¢ Email: valeriia_tronina@stforce.su"
    )

async def reset_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data.pop(update.effective_user.id, None)
    await update.message.reply_text("üîÑ –†–∞—Å—á—ë—Ç —Å–±—Ä–æ—à–µ–Ω. –í–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END

async def city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data[update.effective_user.id] = {'city': update.message.text}
    reply_keyboard = [['–®–µ—Ä–µ–º–µ—Ç—å–µ–≤–æ', '–ü—É–ª–∫–æ–≤–æ']]
    await update.message.reply_text("‚úàÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ –∞—ç—Ä–æ–ø–æ—Ä—Ç –¥–æ—Å—Ç–∞–≤–∫–∏:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True, resize_keyboard=True)
    )
    return AIRPORT

async def airport(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data[update.effective_user.id]['airport'] = update.message.text
    await update.message.reply_text("‚öñÔ∏è –£–∫–∞–∂–∏—Ç–µ –≤–µ—Å –≥—Ä—É–∑–∞ (–≤ –∫–≥):")
    return WEIGHT

async def weight(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_data[update.effective_user.id]['weight'] = float(update.message.text.replace(",", "."))
    except ValueError:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–µ—Å —á–∏—Å–ª–æ–º.")
        return WEIGHT
    await update.message.reply_text("üì¶ –£–∫–∞–∂–∏—Ç–µ –¥–ª–∏–Ω—É –≥—Ä—É–∑–∞ (–≤ —Å–º):")
    return LENGTH

async def length(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_data[update.effective_user.id]['length'] = float(update.message.text.replace(",", "."))
    except ValueError:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É —á–∏—Å–ª–æ–º.")
        return LENGTH
    await update.message.reply_text("üì¶ –£–∫–∞–∂–∏—Ç–µ —à–∏—Ä–∏–Ω—É –≥—Ä—É–∑–∞ (–≤ —Å–º):")
    return WIDTH

async def width(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_data[update.effective_user.id]['width'] = float(update.message.text.replace(",", "."))
    except ValueError:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —à–∏—Ä–∏–Ω—É —á–∏—Å–ª–æ–º.")
        return WIDTH
    await update.message.reply_text("üì¶ –£–∫–∞–∂–∏—Ç–µ –≤—ã—Å–æ—Ç—É –≥—Ä—É–∑–∞ (–≤ —Å–º):")
    return HEIGHT

async def height(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    try:
        user_data[user_id]['height'] = float(update.message.text.replace(",", "."))
    except ValueError:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É —á–∏—Å–ª–æ–º.")
        return HEIGHT

    data = user_data[user_id]
    vol_weight = (data['length'] * data['width'] * data['height']) / 6000
    chargeable_weight = max(data['weight'], vol_weight)

    if chargeable_weight <= 45:
        cost = 450
        note = "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –¥–æ 45 –∫–≥"
    elif chargeable_weight < 100:
        cost = chargeable_weight * 5.00
        note = "–°—Ç–∞–≤–∫–∞ 5 USD/–∫–≥"
    elif chargeable_weight < 300:
        cost = chargeable_weight * 4.65
        note = "–°—Ç–∞–≤–∫–∞ 4.65 USD/–∫–≥"
    elif chargeable_weight < 500:
        cost = chargeable_weight * 3.69
        note = "–°—Ç–∞–≤–∫–∞ 3.69 USD/–∫–≥"
    else:
        cost = chargeable_weight * 3.09
        note = "–°—Ç–∞–≤–∫–∞ 3.09 USD/–∫–≥"

    response = f"""
üì¶ –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–≤–∏–∞–ø–µ—Ä–µ–≤–æ–∑–∫–∏: {round(cost, 2)} USD
üßæ –ü—Ä–∏–º–µ–Ω–µ–Ω–æ: {note}

üìç –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏: {data['city']}
‚úàÔ∏è –ê—ç—Ä–æ–ø–æ—Ä—Ç –¥–æ—Å—Ç–∞–≤–∫–∏: {data['airport']}
‚öñÔ∏è –£—á—Ç—ë–Ω–Ω—ã–π –≤–µ—Å: {round(chargeable_weight, 2)} –∫–≥ (—Ä–µ–∞–ª—å–Ω—ã–π: {data['weight']} –∫–≥, –æ–±—ä–µ–º–Ω—ã–π: {round(vol_weight, 2)} –∫–≥)

‚ÑπÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:
‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã: –æ—Ç 80 –¥–æ 150 USD
‚Ä¢ –ê–≤–∏–∞–ª–∏–Ω–∏–∏: China Eastern, Hainan Airlines, China Southern
‚Ä¢ –¢–∞–º–æ–∂–µ–Ω–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ: 16 000 ‚ÇΩ –∑–∞ –î–¢

üì≤ –°–≤—è–∑–∞—Ç—å—Å—è —Å –ª–æ–≥–∏—Å—Ç–æ–º:
‚Ä¢ WhatsApp: https://wa.me/79295770582
‚Ä¢ Email: valeriia_tronina@stforce.su
"""
    await update.message.reply_text(response)
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–†–∞—Å—á—ë—Ç –ø—Ä–µ—Ä–≤–∞–Ω. –í–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ.")
    return ConversationHandler.END

def main():
    TOKEN = "7916963483:AAGKLGf8h-678gyxJMBDiJ6bDLaiMQqjQsM"
    app = ApplicationBuilder().token(TOKEN).build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            CITY: [MessageHandler(filters.TEXT & ~filters.COMMAND, city)],
            AIRPORT: [MessageHandler(filters.TEXT & ~filters.COMMAND, airport)],
            WEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, weight)],
            LENGTH: [MessageHandler(filters.TEXT & ~filters.COMMAND, length)],
            WIDTH: [MessageHandler(filters.TEXT & ~filters.COMMAND, width)],
            HEIGHT: [MessageHandler(filters.TEXT & ~filters.COMMAND, height)],
        },
        fallbacks=[
            CommandHandler("cancel", cancel),
            CommandHandler("reset", reset_command)
        ],
    )

    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("info", info_command))
    app.add_handler(CommandHandler("contacts", contacts_command))
    app.add_handler(CommandHandler("reset", reset_command))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
